#!/usr/bin/env python

from __future__ import print_function
import argparse
import csv
import io
import re

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("path", help="Path to .txt file")
    parser.add_argument("-n", "--numbered", type=int,
                        help="Indicate whether items are numbered and which line is numbered")
    parser.add_argument("-o", "--output", type=str,
                        help="Specifiy output path")

    args = parser.parse_args()
    input_path = args.path
    numbered_line = args.numbered
    output_path = args.output


    with io.open(input_path, mode="r", encoding="utf-8-sig") as txt_file:
        input_text =  txt_file.read()

    if numbered_line:
        items = turn_to_list(input_text, numbered_line)
    else:
        items = turn_to_list(input_text)

    if output_path:
        write_csv(items, output_path)
    else:
        write_csv(items)


def turn_to_list(input_str, number_line=0):
    """ Clean up input string and returns a list of lists:
    [[12, Name, location], [13, Name, location]]
    """
    chunks = re.sub("\n\s+\n", "\n\n", input_str)
    chunks = chunks.split("\n\n")
    chunks = [chunk.splitlines() for chunk in chunks]

    if number_line == 0:
        return chunks
    else:
        return_chunks = []
        for chunk in chunks:
            new_chunk = []
            for index, item in enumerate(chunk):
                if index != number_line - 1:
                    new_chunk.append(item)
                else:
                    split_line = item.split(" ", 1)
                    new_chunk += split_line
            
            return_chunks.append(new_chunk)
        return return_chunks


def find_longest_entry(cunks_list):
    longest = 0
    for chunk in chunks:
        if len(chunk) > longest:
            longest = len(chunk)

    return longest


def write_csv(list_items, file_path="./output.csv"):
    """ Write CSV file to path
    Items is a list, where each item is a CSV row
    """
    with open(file_path, mode="wb+") as out_file:
        writer = csv.writer(out_file, dialect="excel")

        for item in list_items:
            writer.writerow(item)


if __name__ == "__main__":
    main()

